#+TITLE: MacOS: Gerbil has an Apple
#+EXPORT_FILE_NAME: ../doc/guide/macos.md
#+OPTIONS: toc:nil

* Table of Contents :noexport:
:PROPERTIES:
:TOC:      :include siblings :depth 3 :ignore (this)
:END:

:CONTENTS:
- [[#homebrew-formula-and-binaries][Homebrew Formula and Binaries]]
- [[#raw-build][Raw build]]
:END:

* Gerbil on MacOS

MacOS is well supported by gerbil.

  - If you've got [[https://brew.sh/][Homebrew]] you can use the [[#homebrew-formula-and-binaries][Tap and/or Formula]].
  - If you've got some time to spare it can [[#raw-build][be built]] easily.
    
Because there are many different versions and processors your
configuration may be slightly different than expected. If anything at
all seems out of the ordinary please [[https://github.com/mighty-gerbils/gerbil/issues][file an issue]] ot get in touch
another way and we'll be on top of it.

* Homebrew Formula and Binaries
:PROPERTIES:
:CUSTOM_ID: homebrew-formula-and-binaries
:END:

The simple way is to use the [[https://github.com/mighty-gerbils/homebrew-gerbil][Homebrew Tap]].

There are binaries as well as the ability to build the HEAD of master.

#+begin_src sh
brew install mighty-gerbils/gerbil/gerbil-scheme
#+end_src

That repository is also available in the gerbil source [[file:homebrew/README.org][as a subtree]].

#+begin_src sh
   git subtree add --prefix macos/homebrew git@github.com:mighty-gerbils/homebrew-gerbil.git main --squash
#+end_src

* Raw build
:PROPERTIES:
:CUSTOM_ID: raw-build
:END:

 - Install XCode :: Open a terminal and run ~xcode-select --install~

 - Compile and Install OpenSSL :: We need it for crypto so cannot use
   the built in ssl.
   #+begin_src sh
     git clone https://github.com/openssl/openssl.git
     cd openssl;
     ./config && make
     sudo make install
   #+end_src

 - Compile and Install Gerbil :: Easy! 
   #+begin_src sh
     git clone https://github.com/mighty-gerbils/gerbil.git

     # On Sonama, Silicon not Intel, we set the prefix as so.
     # You may want it elsewhere.
     cd gerbil;
     ./configure --prefix=/opt/gerbil && make
     sudo make install
   #+end_src


 We now have the lastest gerbil setup in the default manner. The
 symlinks and paths are for our usage. Gerbil will, by default, look
 in the directory where it is installed always.

 So, in this example, the =current/= gerbil is in fact
 =v0.18.1-51-gd9c691b1/=. This allows us to have different versions
 installed and used while also giving us some =$PATH='s for running
 and including and linking.

 #+begin_src sh
% ls -l /opt/gerbil
total 0
lrwxr-xr-x  1 root  wheel   11  5 Mar 17:31 bin -> current/bin
lrwxr-xr-x  1 root  wheel   20  5 Mar 17:31 current -> v0.18.1-51-gd9c691b1
lrwxr-xr-x  1 root  wheel   15  5 Mar 17:31 include -> current/include
lrwxr-xr-x  1 root  wheel   11  5 Mar 17:31 lib -> current/lib
lrwxr-xr-x  1 root  wheel   13  5 Mar 17:31 share -> current/share
lrwxr-xr-x  1 root  wheel   11  5 Mar 17:31 src -> current/src
drwxr-xr-x  7 root  wheel  224  5 Mar 17:31 v0.18.1-51-gd9c691b1
 #+end_src

